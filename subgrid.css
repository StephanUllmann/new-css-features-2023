* {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
  box-sizing: border-box;
  color-scheme: dark;
}

body {
  font-family: 'Trispace', sans-serif;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

img {
  display: block;
  max-width: 100%;
  height: auto;
  font-style: italic;
  background-repeat: no-repeat;
  background-size: cover;
  shape-margin: 1rem;
}

.header {
  margin: 2rem 10rem;

  @media screen and (width < 400px) {
    margin: 2rem auto;
    text-align: center;
  }
}

.grid {
  margin: 2rem 10rem;
  display: grid;

  grid-template-columns: repeat(auto-fit, minmax(min(100%, 35rem), 1fr));
  grid-auto-rows: 20rem auto auto;
  grid-auto-flow: dense;
  column-gap: clamp(1rem, 5vw, 3rem);
  row-gap: 3rem;
  place-items: center;

  container-type: inline-size;

  @media screen and (width < 1200px) {
    margin: 2rem 5rem;
  }
}

.star {
  text-decoration: none;
  color: inherit;
  display: grid;
  /* grid rows will be taken by the subgrid children */
  grid-row: span 3;
  grid-template-rows: subgrid;
  justify-items: center;
  background-color: #212125;
  border-radius: 1rem;
  padding-bottom: 1.5rem;
  overflow: hidden;
  box-shadow: 2px 1px 3px #2121257a;

  /* with new CSS nesting you can write media queries nested! */
  @container (width < 700px) {
    background-color: purple;
  }

  /* @container (width > 1200px) {
    grid-column: span 2;
  } */
}

.star[data-feature] {
  view-transition-name: morph;

  @container (width < 1490px) and (width > 1109px) {
    grid-column: span 2;

    /* background-color: transparent; */
    grid-template-rows: 20rem 17rem auto;

    .star__img {
      grid-column: span 2;
      grid-row: span 2;
    }
    .star__heading {
      align-self: center;
      font-size: 2.25rem;
    }
    .star__description {
      align-self: center;
      padding: 0.5rem;
    }
  }
}

/* single card after view transition */
.star:not(:has(+ .star)):first-child {
  grid-template-rows: auto;
  gap: 2rem;
  background-color: transparent;
  box-shadow: none;

  .star__img {
    height: 50dvh;
    /* grid-column: span 2; */
  }
  .star__heading {
    font-size: 2rem;
    font-weight: bold;
  }
  .star__description {
    max-width: 50ch;
    font-size: 1.5rem;
  }
}

a {
  transform: all 200ms;
}

a:hover {
  filter: saturate(120%);
}

.star__img {
  height: 100%;
  object-fit: none;
  /* doesn't work - names need to be unique for each element  */
  /* view-transition-name: image; */
}

.star[data-feature] .star__img {
  /* view-transition-name: image; */
}

::view-transition-old(.star__img) {
  animation: animate-pic 300ms forwards;
}
::view-transition-new(.star__img) {
  animation: animate-pic 300ms reverse;
}

@keyframes animate-pic {
  from {
    height: 100%;
  }
  to {
    height: 50dvh;
  }
}

.star__heading {
  font-size: 1.4rem;
  font-weight: bold;
}

.star__description {
  max-width: 30ch;
  font-size: 1.2rem;
}

.home-link {
  font-size: 1.5rem;
  margin: 1rem 1.5rem;
  text-decoration: none;
}

.scroll-thingy {
  position: fixed;
  right: 0.5rem;
  font-size: 3rem;
  animation: scroll-along linear;
  animation-timeline: scroll();
  rotate: -45deg;
}
.scroll-thingy::before {
  content: 'ðŸš€';
  animation: scroll-along linear;
  animation-timeline: scroll();
}

@keyframes scroll-along {
  0% {
    font-size: 1rem;
    bottom: -10dvh;
  }
  66% {
    content: 'ðŸš€';
  }
  100% {
    right: 0;
    content: 'ðŸ’¥';
    bottom: 100dvh;
    font-size: 4rem;
  }
}
